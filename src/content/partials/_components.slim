ruby:

  components = {

    libs_code: [
      {
        name:   'Kit::Organizer',
        desc:   'Improve your code flow with Railway Oriented Programming.<br/>Easily chain your methods & descrive your happy & errors paths.<br/>Customize to your need with the simple pluggin system.',
        href:   'https://github.com/rubykit/kit/tree/master/libraries/kit-organizer',
      },
      {
        name:   'Kit::Contract',
        desc:   'Unified validation primitive for all your data.<br/>Contracts can be used on method signatures and provide an alternative to static typing.<br/>Forms, DB models or any data can be easily validated through ChangeSets.',
        href:   'https://github.com/rubykit/kit/tree/master/libraries/kit-organizer',
      },
      {
        name:   'Kit::Error',
        desc:   'Unified error handling.<br/>Provides a generic error format.<br/>Report your errors to external backends (NewRelic, Sentry, etc) or persist them in your DB.',
        href:   'https://github.com/rubykit/kit/tree/master/libraries/kit-error',
      },
      {
        name:   'Kit::Doc',
        desc:   'Generates versionned & beautiful looking documentation through Markdown in comments.<br/>It uses Yard to generate ExDoc compatible output.',
        href:   'https://github.com/rubykit/kit/tree/master/libraries/kit-doc-yard',
      },
    ],

    libs_bounded_contexts:   [

      {
        name:   'Kit::Api',
        desc:   'Describe the Resources you want the API to expose and it becomes available over JSON:API and soon GraphQL!<br/>Handles pagination, filtering & resources linkage out the box, even when the Resources do not live on the same DB.',
        href:   'https://github.com/rubykit/kit/tree/master/libraries/kit-api',
      },
      {
        name:   'Kit::Admin',
        desc:   'Admin web interface for the bounded context.<br/>Currently using ActiveAdmin with a system of resource descriptions.',
        href:   'https://github.com/rubykit/kit/tree/master/libraries/kit-active_admin',
      },
      {
        name:   'Kit::ViewComponents',
        desc:   'A set of reusable View components for Forms, Inputs, Alerts, SEO, etc.',
        href:   'https://github.com/rubykit/kit/tree/master/libraries/kit-view_components',
      },
      {
        name:   'Kit::ThemeBootstrap',
        desc:   'Our Bootstrap theme & kit of part to speed up development.',
        href:   'https://github.com/rubykit/kit_theme_bootstrap',
      },
    ],

    libs_deployment: [
      {
        name:   'Kit::BoundedContext',
        desc:   'Basic layout & configuration to build your "bounded contexts".<br/>Kit\'s bounded contexts usually include the business logic for a number of Models + Web UI + API + Admin UI',
        href:   'https://github.com/rubykit/kit/tree/master/libraries/kit-domain',
      },
      {
        name:   'Kit::AppContainer',
        desc:   'Application container to serve bounded contexts.<br/>Use 1 AppContainer to deploy as a monolith, or N AppContainers to deploy as micro-services without having to change a single line of code inside your bounded contexts!',
        href:   'https://github.com/rubykit/kit/tree/master/libraries/kit-app-container',
      },
      {
        name:   'Kit::Router',
        desc:   'Expose bounded contexts\' endpoints to the world and between multiple bounded contexts.<br/>The Router deals with the various protocols to expose endpoints (HTTP, Mailer) and connect bounded contextes together.',
        href:   'https://github.com/rubykit/kit/tree/master/libraries/kit-router',
      },
      {
        name:   'Kit::DummyAppContainer',
        desc:   'Application container that can be embedded inside BoundedContext in order to test them easily.',
        href:   'https://github.com/rubykit/kit/tree/master/libraries/kit-dummy-app-container',
      },
    ],

    kit_bounded_contexts:   [
      {
        name:   'Kit::Auth',
        desc:   "Handles authentication & authorization.<br/>Contains all auth logic, web UI, API & Admin UI.",
        href:   'https://github.com/rubykit/kit/tree/master/domains/kit-auth',
      },
    ],

    libs_utilities: [

      {
        name:   'Kit::Pagination',
        desc:   'Absolute set pagination.',
        href:   'https://github.com/rubykit/kit/tree/master/libraries/kit-pagination',
      },
      #{
      #  name:   'Kit::Config',
      #  desc:   'Extensible configuration management system.',
      #  href:   'https://github.com/rubykit/kit/tree/master/libraries/kit-dotenv',
      #},
    ],
  }

section#framework.mt-7
  .container-xl
    .row
      .col.text-center.px-3.px-lg-0
        div.h2.fw-400
          span.ff-ms.text-kit.fw-500
            | kit
          |  provides comprehensive answers on how to write & organize your code at every level

        div.h3.fw-200.mt-3.mt-lg-0
         | You'll find an overview of what's provided in the framework below.

section#framework-components

  // Code organization ---------------------------------------------------------
  .container-xl.mt-7
    .row#framework-libraries-code
      .col-12
        .px-3.px-lg-0
          h3.position-relative
            | How to write code
            a.hover-link href="#framework-libraries-code"
              span.icon-link aria-hidden="true"
              span.sr-only.no-select
                | Link to this section
            /a.learn-more href='#' target='_blank'
              | Learn more about how we write code
          p.mb-4
            | The primitives you'll use to write & chain methods, describe higher lever operations (including happy & error paths) and document your code!

    - framework_components_list = components[:libs_code]
    include src/content/partials/_framework_components_grid

  // Domains -------------------------------------------------------------------
  .container-xl.mt-5
    .row#framework-libraries-domains
      .col-12
        .px-3.px-lg-0
          h3.position-relative
            | How to organize business logic
            a.hover-link href="#framework-libraries-domains"
              span.icon-link aria-hidden="true"
              span.sr-only.no-select
                | Link to this section
          p.mb-4
            | What you need to create Bounded Contexts where most of you code will live. With Kit, bounded contexts include all your domain logic + a web UI + an API + an Admin UI

    - framework_components_list = components[:libs_bounded_contexts]
    include src/content/partials/_framework_components_grid


  // Deployment ----------------------------------------------------------------
  .container-xl.mt-5
    .row#framework-libraries-deployment
      .col-12
        .px-3.px-lg-0
          h3.position-relative
            | How to structure & deploy in production
            a.hover-link href="#framework-libraries-deployment"
              span.icon-link aria-hidden="true"
              span.sr-only.no-select
                | Link to this section
          p.mb-4
            | No more monolith VS micro-services: deploy as 1 or N services without chaning a line of code in your bounded contexts!

    - framework_components_list = components[:libs_deployment]
    include src/content/partials/_framework_components_grid

  // Domains -------------------------------------------------------------------
  .container-xl.mt-5.mb-5
    .row#framework-domains
      .col-12
        .px-3.px-lg-0
          h3.position-relative
            | Included bounded contexts
            a.hover-link href="#framework-kit-bounded-contexts"
              span.icon-link aria-hidden="true"
              span.sr-only.no-select
                | Link to this section
          p.mb-4
            ' Complete bounded contexts that can be added to your app or deployed as micro-services.

    - framework_components_list = components[:kit_bounded_contexts]
    include src/content/partials/_framework_components_grid


  // Libraries -----------------------------------------------------------------
  /.container-xl.mt-5
    .row#framework-libraries-utilities
      .col-12
        h3.position-relative
          | Utilities libraries
          a.hover-link href="#framework-libraries-utilities"
            span.icon-link aria-hidden="true"
            span.sr-only.no-select
              | Link to this section
        p.mb-0
          | Various libs we rely on.

    - framework_components_list = components[:libs_utilities]
    include src/content/partials/_framework_components_grid